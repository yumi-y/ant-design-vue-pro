{"remainingRequest":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/babel-loader/lib/index.js!/Users/yumi/代码/code/ant-design-vue-pro/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yumi/代码/code/ant-design-vue-pro/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yumi/代码/code/ant-design-vue-pro/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yumi/代码/code/ant-design-vue-pro/src/components/Chart.vue","mtime":1610964307290},{"path":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport echarts from \"echarts/lib/echarts\";\nimport \"echarts/lib/chart/bar\";\nimport \"echarts/lib/component/title\"; //resize-detector用来监听元素进行自适应高度\n\nimport { addListener, removeListener } from \"resize-detector\";\nimport debounce from \"lodash/debounce\";\nexport default {\n  props: {\n    option: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    option: function option(val) {\n      this.chart.setOption(val);\n    }\n  },\n  //进行防抖处理\n  created: function created() {\n    this.resize = debounce(this.resize, 300);\n  },\n  mounted: function mounted() {\n    this.renderChart();\n    addListener(this.$refs.chartDom, this.resize);\n  },\n  //使用之后销毁，防止占用内存\n  beforeDestroy: function beforeDestroy() {\n    removeListener(this.$refs.chartDom, this.resize);\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    resize: function resize() {\n      this.chart.resize();\n    },\n    renderChart: function renderChart() {\n      this.chart = echarts.init(this.$refs.chartDom);\n      this.chart.setOption(this.option);\n    }\n  }\n};",{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;AAKA,OAAA,OAAA,MAAA,qBAAA;AACA,OAAA,uBAAA;AACA,OAAA,6BAAA,C,CACA;;AACA,SAAA,WAAA,EAAA,cAAA,QAAA,iBAAA;AACA,OAAA,QAAA,MAAA,iBAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GADA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,GADA,EACA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,GAAA;AACA;AAHA,GAPA;AAmBA;AACA,EAAA,OApBA,qBAoBA;AACA,SAAA,MAAA,GAAA,QAAA,CAAA,KAAA,MAAA,EAAA,GAAA,CAAA;AACA,GAtBA;AAuBA,EAAA,OAvBA,qBAuBA;AACA,SAAA,WAAA;AACA,IAAA,WAAA,CAAA,KAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA,CAAA;AACA,GA1BA;AA2BA;AACA,EAAA,aA5BA,2BA4BA;AACA,IAAA,cAAA,CAAA,KAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA,CAAA;AACA,SAAA,KAAA,CAAA,OAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,GAhCA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,KAAA,CAAA,MAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,WAAA,KAAA,GAAA,OAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA,MAAA;AACA;AAPA;AAjCA,CAAA","sourcesContent":["<template>\n  <div ref=\"chartDom\"></div>\n</template>\n\n<script>\nimport echarts from \"echarts/lib/echarts\";\nimport \"echarts/lib/chart/bar\";\nimport \"echarts/lib/component/title\";\n//resize-detector用来监听元素进行自适应高度\nimport { addListener, removeListener } from \"resize-detector\";\nimport debounce from \"lodash/debounce\";\nexport default {\n  props: {\n    option: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  watch: {\n    option(val) {\n      this.chart.setOption(val);\n    },\n    //深度监听，比较耗性能\n    //option: {\n    //  handler(val) {\n    //    this.chart.setOption(val);\n    //  },\n    //  deep: true,\n    //},\n  },\n  //进行防抖处理\n  created() {\n    this.resize = debounce(this.resize, 300);\n  },\n  mounted() {\n    this.renderChart();\n    addListener(this.$refs.chartDom, this.resize);\n  },\n  //使用之后销毁，防止占用内存\n  beforeDestroy() {\n    removeListener(this.$refs.chartDom, this.resize);\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    resize() {\n      this.chart.resize();\n    },\n    renderChart() {\n      this.chart = echarts.init(this.$refs.chartDom);\n      this.chart.setOption(this.option);\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}