{"remainingRequest":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yumi/代码/code/ant-design-vue-pro/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yumi/代码/code/ant-design-vue-pro/src/components/Chart.vue","mtime":1610964307290},{"path":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yumi/代码/code/ant-design-vue-pro/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport echarts from \"echarts/lib/echarts\";\nimport \"echarts/lib/chart/bar\";\nimport \"echarts/lib/component/title\";\n//resize-detector用来监听元素进行自适应高度\nimport { addListener, removeListener } from \"resize-detector\";\nimport debounce from \"lodash/debounce\";\nexport default {\n  props: {\n    option: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  watch: {\n    option(val) {\n      this.chart.setOption(val);\n    },\n    //深度监听，比较耗性能\n    //option: {\n    //  handler(val) {\n    //    this.chart.setOption(val);\n    //  },\n    //  deep: true,\n    //},\n  },\n  //进行防抖处理\n  created() {\n    this.resize = debounce(this.resize, 300);\n  },\n  mounted() {\n    this.renderChart();\n    addListener(this.$refs.chartDom, this.resize);\n  },\n  //使用之后销毁，防止占用内存\n  beforeDestroy() {\n    removeListener(this.$refs.chartDom, this.resize);\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    resize() {\n      this.chart.resize();\n    },\n    renderChart() {\n      this.chart = echarts.init(this.$refs.chartDom);\n      this.chart.setOption(this.option);\n    },\n  },\n};\n",{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div ref=\"chartDom\"></div>\n</template>\n\n<script>\nimport echarts from \"echarts/lib/echarts\";\nimport \"echarts/lib/chart/bar\";\nimport \"echarts/lib/component/title\";\n//resize-detector用来监听元素进行自适应高度\nimport { addListener, removeListener } from \"resize-detector\";\nimport debounce from \"lodash/debounce\";\nexport default {\n  props: {\n    option: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  watch: {\n    option(val) {\n      this.chart.setOption(val);\n    },\n    //深度监听，比较耗性能\n    //option: {\n    //  handler(val) {\n    //    this.chart.setOption(val);\n    //  },\n    //  deep: true,\n    //},\n  },\n  //进行防抖处理\n  created() {\n    this.resize = debounce(this.resize, 300);\n  },\n  mounted() {\n    this.renderChart();\n    addListener(this.$refs.chartDom, this.resize);\n  },\n  //使用之后销毁，防止占用内存\n  beforeDestroy() {\n    removeListener(this.$refs.chartDom, this.resize);\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    resize() {\n      this.chart.resize();\n    },\n    renderChart() {\n      this.chart = echarts.init(this.$refs.chartDom);\n      this.chart.setOption(this.option);\n    },\n  },\n};\n</script>\n"]}]}